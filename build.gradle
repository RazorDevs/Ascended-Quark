plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.13, 6.2)'
    id 'io.github.0ffz.github-packages' version '[1,2)'
    id 'org.spongepowered.mixin' version '[0.7,0.8)'
}

version = "${project.mc_version}-${project.mod_version}"
group = "org.razordevs.${mod_id}"

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', 'ascended_quark'
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://modmaven.dev" }

    maven githubPackage.invoke("The-Aether-Team/Nitrogen")
    maven githubPackage.invoke("The-Aether-Team/Cumulus")
    maven githubPackage.invoke("The-Aether-Team/The-Aether")

    flatDir {
        dir 'libs'
    }


}

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    minecraft "net.minecraftforge:forge:${project.mc_version}-47.1.3"

    // Aether
    implementation fg.deobf("com.aetherteam.nitrogen:nitrogen_internals:${project.nitrogen_version}")
    implementation fg.deobf("com.aetherteam.cumulus:cumulus_menus:${project.cumulus_version}")
    implementation fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}")
    implementation fg.deobf("com.aetherteam.aether:aether:${project.aether_version}")

    // Quark
    implementation fg.deobf("curse.maven:quark-243121:${quark_version}")
    //implementation fg.deobf("curse.maven:zeta-968868:${zeta_version}")
    //implementation fg.deobf("curse.maven:quark-oddities-301051:3575623")
    implementation fg.deobf("curse.maven:zeta-968868:5597406")
    //Optional
    //implementation fg.deobf("curse.maven:deep-aether-852465:5441091")
    //implementation fg.deobf("local:aeroblender:1.20.1-1.0.2-rc1-neoforge")
    implementation fg.deobf("com.github.glitchfiend:TerraBlender-forge:${project.terrablender_version}")
    //implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${project.mc_version}:${project.geckolib_version}")

    // Extra
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

mixin {
    config "${project.mod_id}.mixins.json"
    add sourceSets.main, "${project.mod_id}.refmap.json"
}